name: C/C++ CI

on:
  pull_request:
    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    #paths:
    #  - '.github/workflows/automate.yml'
    #schedule:
    #  - cron: "*/5 * * * *"
    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/depends
        key: ${{ runner.os }}-depends
        restore-keys: |
          ${{ runner.os }}-depends
    - uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/depends
          ${{ github.workspace }}/src/bitcoind
        key: ${{ runner.os }}-bitcoind
        restore-keys: |
          ${{ runner.os }}-bitcoind-
    - name: install libs-1
      run: |
        sudo \
        apt-get install --no-install-recommends -y \
        automake \
        binutils \
        bsdmainutils \
        ca-certificates \
        cmake \
        curl \
        diffoscope \
        doxygen \
        g++-multilib \
        git \
        libbz2-dev \
        libcap-dev \
        libtinfo5 \
        libtool \
        lbzip2 \
        libz-dev \
        make \
        nsis \
        patch \
        pkg-config \
        python3 \
        python3-setuptools \
        ripgrep \
        vim \
        xz-utils \
        build-essential libtool autotools-dev \
        automake pkg-config bsdmainutils python3 \
        libevent-dev libboost-dev \
        libsqlite3-dev libminiupnpc-dev libnatpmp-dev \
        libzmq3-dev systemtap-sdt-dev \
        libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools \
        qtwayland5 libqrencode-dev

        # Split cross-compilers out.
        # apt cant install everything at once
    - name: install libs-2
      run: |
        sudo \
        apt-get install --no-install-recommends -y \
        g++-aarch64-linux-gnu \
        binutils-aarch64-linux-gnu \
        g++-arm-linux-gnueabihf \
        binutils-arm-linux-gnueabihf curl \
        binutils-riscv64-linux-gnu \
        g++-riscv64-linux-gnu \
        binutils-gold \
        bsdmainutils pkg-config python3 patch bison \
        g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf \
        g++-aarch64-linux-gnu #\
        # binutils-aarch64-linux-gnu
    - name: install statsd
      run: |
        sudo -s install -v ./src/statsd_client.h   /usr/local/include/
        sudo -s install -v ./src/statsd_client.cpp /usr/local/include/
    - name: autogen.sh
      run: |
        ./autogen.sh
    - name: make download -C depends
      run:  |
        cd depends
        # make HOST=arm-linux-gnueabihf NO_QT=1
        make HOST=aarch64-linux-gnu NO_QT=1
        cd ..
        # make download -C depends
        # make install -C depends
        ./autogen.sh
        echo
    - name: configure
      run:  |
        # ./configure
        # CONFIG_SITE=$PWD/depends/arm-linux-gnueabihf/share/config.site ./configure --enable-reduce-exports LDFLAGS=-static-libstdc++
        CONFIG_SITE=$PWD/depends/aarch64-linux-gnu/share/config.site ./configure \
        --disable-wallet \
        --disable-tests \
        --disable-bench \
        --disable-man \
        --with-gui=no \
        --enable-reduce-exports LDFLAGS=-static-libstdc++
    - name: make check
      run: |
        make check
    - name: make install
      run: sudo make install
